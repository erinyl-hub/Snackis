@page
@model Snackis.Pages.RoleUser.CreatePostPageModel
@{
}


<form method="post" enctype="multipart/form-data">

    @if (Model.Categories != null)
    {
        <select id="categorySelect" class="from-control">
            @foreach (var categorie in Model.Categories)
            {
                <option value="@categorie.Id">@categorie.CategorieName</option>
            }
        </select>

        <select id="headingSelect" name="Post.HeadingId" class="from-control"></select>


    }

    <br /><br />



    <br /><br />

    <label asp-for="Post.PostHeading">Heading</label>
    <input asp-for="Post.PostHeading" />
    <span asp-validation-for="Post.PostHeading" class="text-danger"></span>

    <br /><br />


    <textarea asp-for="Post.PostText" cols="40" rows="5"></textarea>
    <span asp-validation-for="Post.PostText" class="text-danger"></span>
    <br />



    <br />


    <input type="submit" class="btn btn-success" value="Submit post" />
</form>

<partial name="_ValidationScriptsPartial" />

@section Scripts {

    <script>
        const categories = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Categories));

        const categorySelect = document.getElementById('categorySelect');
        const headingSelect = document.getElementById('headingSelect');

        function updateHeadings() {
          const selectedId = parseInt(categorySelect.value);
          const category = categories.find(c => c.Id === selectedId);

          headingSelect.innerHTML = '';
          if (category && category.Headings) {
            category.Headings.forEach(h => {
              const option = document.createElement('option');
              option.value = h.Id;
              option.textContent = h.HeadingName;
              headingSelect.appendChild(option);
            });
          }
        }

        categorySelect.addEventListener('change', updateHeadings);


        updateHeadings();
    </script>

    }
